var searchIndex = {};
searchIndex['linked_list'] = {"items":[[3,"LinkedList","linked_list","An experimental rewrite of LinkedList to provide a more cursor-oriented API.",null,null],[3,"Cursor","","A cursor over a `LinkedList`.",null,null],[3,"Iter","","An iterator over references to the items of a `LinkedList`.",null,null],[3,"IterMut","","An iterator over mutable references to the items of a `LinkedList`.",null,null],[3,"IntoIter","","An iterator over the items of a `LinkedList`.",null,null],[11,"new","","Returns an empty `LinkedList`.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"self"}}],[11,"push_back","","Appends the given element to the back of the list.",0,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":null}],[11,"push_front","","Appends the given element to the front of the list.",0,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":null}],[11,"pop_back","","Removes the element at the back of the list and returns it.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the element at the front of the list and returns it.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front","","Returns a reference to the element at the front of the list.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Returns a reference to the element at the back of the list.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Returns a mutable reference to the element at the front of the list.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Returns a mutable reference to the element at the back of the list.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"insert","","Inserts the given element into the list at the given index.",0,{"inputs":[{"name":"linkedlist"},{"name":"usize"},{"name":"t"}],"output":null}],[11,"remove","","Removes the element at the given index and returns it.",0,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_at","","Splits the list into two lists at the given index. Returns the right side of the split.\nReturns an empty list if index is out of bounds.",0,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"self"}}],[11,"split_off","","Splits the list in two at the given index.",0,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"self"}}],[11,"append","","Appends the given list to the end of this one. The old list will be empty afterwards.",0,{"inputs":[{"name":"linkedlist"},{"name":"self"}],"output":null}],[11,"splice","","Inserts the given list at the given index. The old list will be empty afterwards.",0,{"inputs":[{"name":"linkedlist"},{"name":"usize"},{"name":"self"}],"output":null}],[11,"len","","Returns the number of elements in the list.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the list is empty.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"clear","","Removes all elements from the list.",0,{"inputs":[{"name":"linkedlist"}],"output":null}],[11,"cursor","","Returns a cursor over the list.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"cursor"}}],[11,"iter","","Returns a forward iterator that yields references to the list's elements.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a forward iterator that yields mutable references to the list's elements.",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"reset","","Resets the cursor to lie between the first and last element in the list.",1,{"inputs":[{"name":"cursor"}],"output":null}],[11,"next","","Gets the next element in the list.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"prev","","Gets the previous element in the list.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"peek_next","","Gets the next element in the list, without moving the cursor head.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"peek_prev","","Gets the previous element in the list, without moving the cursor head.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at the cursor's location in the list, and moves the cursor head to\nlie before it. Therefore, the new element will be yielded by the next call to `next`.",1,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":null}],[11,"remove","","Removes the next element in the list, without moving the cursor. Returns None if the list\nis empty, or if `next` is the ghost element",1,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"split","","Splits the list into two at the cursor's current position. This will return a new list\nconsisting of everything after the cursor, with the original list retaining everything\nbefore. The cursor will then lie between the tail and the ghost.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"linkedlist"}}],[11,"splice","","Inserts the entire list's contents right after the cursor.",1,{"inputs":[{"name":"cursor"},{"name":"linkedlist"}],"output":null}],[11,"seek_forward","","Calls `next` the specified number of times.",1,{"inputs":[{"name":"cursor"},{"name":"usize"}],"output":null}],[11,"seek_backward","","Calls `prev` the specified number of times.",1,{"inputs":[{"name":"cursor"},{"name":"usize"}],"output":null}],[11,"clone","","",2,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",3,{"inputs":[{"name":"iter"}],"output":{"name":"self"}}],[11,"next","","",3,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",2,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",0,{"inputs":[{"name":"linkedlist"}],"output":null}],[11,"default","","",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"self"}}],[11,"from_iter","","",0,{"inputs":[{"name":"linkedlist"},{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",0,{"inputs":[{"name":"linkedlist"},{"name":"i"}],"output":null}],[11,"extend","","",0,{"inputs":[{"name":"linkedlist"},{"name":"i"}],"output":null}],[11,"eq","","",0,{"inputs":[{"name":"linkedlist"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"linkedlist"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"linkedlist"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,{"inputs":[{"name":"linkedlist"},{"name":"h"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"self"}}],[11,"into_iter","","",0,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}]],"paths":[[3,"LinkedList"],[3,"Cursor"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"]]};
initSearch(searchIndex);
